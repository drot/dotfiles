;; -*-lisp-*-
(in-package :stumpwm)

;; Load swank
(require 'swank)
(swank:create-server) 

;; Contrib modules
(set-contrib-dir "~/stumpwm/contrib/")
(load-module "cpu")
(load-module "mem")
(load-module "net")

;; Font
(set-font "-xos4-terminus-medium-*-*-*-12-*-*-*-*-*-iso10646-1")

;; Input and message panels
(set-fg-color "sienna1")
(set-bg-color "grey10")
(set-border-color "sienna4")
(set-msg-border-width 1)

(setf *maxsize-border-width* 1
      *normal-border-width* 0
      *window-border-style* :thick
      *transient-border-width* 4)

(setf *message-window-gravity* :bottom-left
      *timeout-wait* 2
      *input-window-gravity* :bottom-right)

;; Windows
(set-focus-color "sienna1")
(set-unfocus-color "grey10")
(set-normal-gravity :center)
(setf *normal-border-width* 1)

;; Mode-line output
(setf *mode-line-background-color* "black"
*mode-line-foreground-color* "sienna1"
*mode-line-border-color*  "sienna4"
*mode-line-timeout* 1
*mode-line-position* :top
;; Mode-line format
*screen-mode-line-format*
(list "[ %n ] [ %c ] [ %M ] [ %l ]"
      " [ " '(:eval (run-shell-command "date '+%d/%m %H:%M'  | tr -d [:cntrl:]" t)) " ] "
      " %W "))

;; Show mode-line
(stumpwm:toggle-mode-line (stumpwm:current-screen)
			  (stumpwm:current-head))

;; First group name and group creation
(setf (group-name (first (screen-groups (current-screen)))) "term")
(run-commands "gnewbg www" "gnewbg emacs" "gnewbg-float float")

;; Run or raise
; Conkeror
(defcommand conkeror () ()
	    "Run/Raise Conkeror"
	    (run-or-raise "conkeror" '(:class "Conkeror")))

; GIMP
(defcommand gimp () ()
	    "Run/Raise GIMP"
	    (run-or-raise "gimp" '(:class "Gimp")))

;; Window placement
(clear-window-placement-rules)

(define-frame-preference "www"
    (0 t t :class "Conkeror"))

(define-frame-preference "emacs"
    (0 t t :class "Emacs"))

(define-frame-preference "float"
    (0 t t :class "Gimp"))

;; Prefix key
(set-prefix-key (kbd "C-i"))

;; Keybindings
(define-key *root-map* (kbd "C-c") "exec conkeror")
(define-key *root-map* (kbd "c") "exec urxvtc")
(define-key *root-map* (kbd "e") "exec emacsclient -c")
