# -*- mode: Conf -*-
# rTorrent configuration file

# Instance layout (base paths)
method.insert = cfg.basedir, private|const|string, (cat,"/home/drot/.rtorrent/")
method.insert = cfg.watch, private|const|string, (cat,(cfg.basedir),"watch/")
method.insert = cfg.logs, private|const|string, (cat,(cfg.basedir),"log/")
method.insert = cfg.logfile, private|const|string, (cat,(cfg.logs),"rtorrent-",(system.time),".log")

# Maximum number of simultaneous downloads and uploads slots (global slots!)
throttle.max_downloads.global.set = 50
throttle.max_uploads.global.set = 50

# Maximum and minimum number of peers to connect to per torrent
throttle.min_peers.normal.set = 49
throttle.max_peers.normal.set = 50

# Same as above but for seeding completed torrents (-1 = same as downloading)
throttle.min_peers.seed.set = -1
throttle.max_peers.seed.set = -1

# Maximum number of simultaneous downloads and uploads per torrent
throttle.max_downloads.set = 25
throttle.max_uploads.set = 25

# Global upload and download rate in KiB. "0" for unlimited
throttle.global_down.max_rate.set_kb = 4522
throttle.global_up.max_rate.set_kb = 275

# Default directory to save the downloaded torrents
directory.default.set = (cat,(cfg.basedir),"download")

# Default session directory
session.path.set = (cat,(cfg.basedir),".session")

# Watch a directory for new torrents
schedule = watch_start,10,10,((load.start,(cat,(cfg.watch),"*.torrent")))

# Close torrents when diskspace is low
#schedule2 = low_diskspace,5,60,close_low_diskspace=100M

# The ip address reported to the tracker.
#network.local_address.set = 127.0.0.1
#network.local_address.set = rakshasa.no

# The ip address the listening socket and outgoing connections is bound to
#network.bind_address.set = 127.0.0.1
#network.bind_address.set = rakshasa.no

# Port range to use for listening
network.port_range.set = 49164-49164

# Start opening ports at a random position within the port range
#network.port_random.set = no

# Check hash for finished torrents
pieces.hash.on_completion.set = yes

# Set whetever the client should try to connect to UDP trackers
trackers.use_udp.set = no

# Alternative calls to bind and ip that should handle dynamic ip's
#schedule2 = ip_tick,0,1800,ip=rakshasa
#schedule2 = bind_tick,0,1800,bind=rakshasa

# Encryption options, set to none (default) or any combination of the following:
# allow_incoming, try_outgoing, require, require_RC4, enable_retry, prefer_plaintext
protocol.encryption.set = allow_incoming,try_outgoing,enable_retry

# Enable DHT support for trackerless torrents or when all trackers are down
# May be set to "disable" (completely disable DHT), "off" (do not start DHT),
# "auto" (start and stop DHT as needed), or "on" (start DHT immediately)
dht.mode.set = disable

# UDP port to use for DHT
#dht.port.set = 6881

# Enable peer exchange (for torrents not marked private)
protocol.pex.set = no

# Set downlad list layout style. ("full", "compact")
#torrent_list_layout = "full"

# Logging:
# Levels = critical error warn notice info debug
# Groups = connection_* dht_* peer_* rpc_* storage_* thread_* tracker_* torrent_*
print = (cat,"Logging to ",(cfg.logfile))
log.open_file = "log", (cfg.logfile)
log.add_output = "info", "log"
#log.add_output = "tracker_debug", "log"

### END of rtorrent.rc ###
