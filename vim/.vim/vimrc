" Keep everything under one directory
set undodir=$HOME/.vim/undo
set directory=$HOME/.vim/swap
set backupdir=$HOME/.vim/backup
set viminfofile=$HOME/.vim/viminfo

" Make sure specified directories exist
call mkdir(&backupdir, "p")
call mkdir(&directory, "p")
call mkdir(&undodir, "p")

" Enable backup file creation
set backup

" Automatically update file on external changes
set autoread

" Enable undo history saving
set undofile

" Enable file type support and syntax highlight 
filetype plugin indent on
syntax on

" Minimal automatic indenting for any filetype
set autoindent

" Proper backspace behavior
set backspace=indent,eol,start

" Proper Tab insertion
set tabstop=4
set shiftwidth=4
set expandtab

" Possibility to have more than one unsaved buffers
set hidden

" Show current line number at the bottom-right of the screen
set ruler

" Highlight current line
set cursorline

" Highlight specified column
set colorcolumn=80

" Show partial commands
set showcmd

" Don't show current mode
set noshowmode

" Show status line
set laststatus=2

" Show relative line numbers
set relativenumber

" Scrolling offset
set scrolloff=1
set sidescrolloff=5

" Display the last line as much as possible
set display+=lastline

" Default list mode characters
set listchars=eol:§,tab:¤›,extends:»,precedes:«,nbsp:‡

" Delete comment character when joining commented lines
set formatoptions+=j

" Incremental search, hit `<CR>` to stop
set incsearch

" Ignore case in searches unless we specify it
set ignorecase
set smartcase

" Enable completion menu and ignore case
set wildmenu
set wildignorecase

" Don't redraw screen while executing commands that have not been typed 
set lazyredraw

" Send more characters to the screen for redrawing 
set ttyfast

" Use the Xorg's primary buffer as default register
if !empty($DISPLAY)
    set clipboard=unnamed
endif

" Colorscheme setup
if &t_Co >= 256 && (&term =~# '^st' || &term =~# '^tmux')
    " Set override sequences
    let &t_8f = "\<Esc>[38:2:%lu:%lu:%lum"
    let &t_8b = "\<Esc>[48:2:%lu:%lu:%lum"
    " Enable truecolor support
    set termguicolors
    " Set colorscheme
    colorscheme base16-tomorrow-night
    " Set `lightline` theme
    let g:lightline = {
                \   'colorscheme': 'base16'
                \ }
endif

" Hit `%` on `if` to jump to `else`, built-in functionality
runtime macros/matchit.vim
